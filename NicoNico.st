Object subclass: #NicoComment	instanceVariableNames: 'anonymity date locale mail no premium thread userId vpos dateUsec comment'	classVariableNames: ''	poolDictionaries: ''	category: 'NicoNico'!!NicoComment methodsFor: 'printing' stamp: 'd3 2/26/2013 16:26'!printOn: aStream	aStream		nextPutAll: self no;		nextPutAll: ' ';		nextPutAll: self comment;		tab; tab; tab; tab;		nextPutAll: self userId;		space;		nextPutAll: self mail! !!NicoComment methodsFor: 'accessing' stamp: 'd3 2/26/2013 10:21'!anonymity	^ anonymity! !!NicoComment methodsFor: 'accessing' stamp: 'd3 2/26/2013 10:21'!anonymity: anObject	anonymity := anObject! !!NicoComment methodsFor: 'accessing' stamp: 'd3 2/26/2013 10:50'!comment	^ comment! !!NicoComment methodsFor: 'accessing' stamp: 'd3 2/26/2013 10:50'!comment: anObject	comment := anObject! !!NicoComment methodsFor: 'accessing' stamp: 'd3 2/26/2013 10:21'!date	^ date! !!NicoComment methodsFor: 'accessing' stamp: 'd3 2/26/2013 10:21'!date: anObject	date := anObject! !!NicoComment methodsFor: 'accessing' stamp: 'd3 2/26/2013 10:49'!dateUsec	^ dateUsec! !!NicoComment methodsFor: 'accessing' stamp: 'd3 2/26/2013 10:50'!dateUsec: anObject	dateUsec := anObject! !!NicoComment methodsFor: 'accessing' stamp: 'd3 2/26/2013 10:21'!locale	^ locale! !!NicoComment methodsFor: 'accessing' stamp: 'd3 2/26/2013 10:21'!locale: anObject	locale := anObject! !!NicoComment methodsFor: 'accessing' stamp: 'd3 2/26/2013 10:21'!mail	^ mail! !!NicoComment methodsFor: 'accessing' stamp: 'd3 2/26/2013 10:21'!mail: anObject	mail := anObject! !!NicoComment methodsFor: 'accessing' stamp: 'd3 2/26/2013 10:21'!no	^ no! !!NicoComment methodsFor: 'accessing' stamp: 'd3 2/26/2013 10:21'!no: anObject	no := anObject! !!NicoComment methodsFor: 'accessing' stamp: 'd3 2/26/2013 10:21'!premium	^ premium! !!NicoComment methodsFor: 'accessing' stamp: 'd3 2/26/2013 10:21'!premium: anObject	premium := anObject! !!NicoComment methodsFor: 'accessing' stamp: 'd3 2/26/2013 10:21'!thread	^ thread! !!NicoComment methodsFor: 'accessing' stamp: 'd3 2/26/2013 10:21'!thread: anObject	thread := anObject! !!NicoComment methodsFor: 'accessing' stamp: 'd3 2/26/2013 10:21'!userId	^ userId! !!NicoComment methodsFor: 'accessing' stamp: 'd3 2/26/2013 10:21'!userId: anObject	userId := anObject! !!NicoComment methodsFor: 'accessing' stamp: 'd3 2/26/2013 10:21'!vpos	^ vpos! !!NicoComment methodsFor: 'accessing' stamp: 'd3 2/26/2013 10:21'!vpos: anObject	vpos := anObject! !!NicoComment methodsFor: 'xml support' stamp: 'd3 2/26/2013 10:51'!fromXMLString: xmlString 		|chat xmlDocument convertToSetter|	convertToSetter := [ :getter |		(getter asString , ':' ) asSymbol].	xmlDocument := XMLDOMParser parse: xmlString.	chat := xmlDocument findElementNamed: #chat.	self class table keysAndValuesDo: [ :key :value |		self perform: (convertToSetter value: key) with: (chat attributeAt: value) ].	self comment: chat strings first				! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!NicoComment class	instanceVariableNames: ''!!NicoComment class methodsFor: 'as yet unclassified' stamp: 'd3 2/26/2013 10:23'!attributeNames	^ #(#thread #no #vpos #date #date_usec #mail #user_id #premium #anonymity #locale).! !!NicoComment class methodsFor: 'as yet unclassified' stamp: 'd3 2/26/2013 10:43'!createTable	| table source |	table := self attributeNames collect:[ :attr | | selector |	selector := attr asString.	selector := selector copyReplaceAll: '_' with: ' '.	selector := selector asCamelCase asLegalSelector.	selector asSymbol -> attr. ].	source := WriteStream on: String new.	source nextPutAll: 'table'; cr; tab; nextPutAll: '^'.	source nextPutAll: table asString.	source nextPutAll: ' asDictionary'.	self class compile: source contents  classified: nil.! !!NicoComment class methodsFor: 'as yet unclassified' stamp: 'd3 2/26/2013 10:20'!fromXMLString: xmlString 	^self new fromXMLString: xmlString! !!NicoComment class methodsFor: 'as yet unclassified' stamp: 'd3 2/26/2013 10:39'!initialize 		"self initialize"	self createTable.! !!NicoComment class methodsFor: 'as yet unclassified' stamp: 'd3 2/26/2013 10:43'!table	^{#thread->#thread. #no->#no. #vpos->#vpos. #date->#date. #dateUsec->#date_usec. #mail->#mail. #userId->#user_id. #premium->#premium. #anonymity->#anonymity. #locale->#locale} asDictionary! !Object subclass: #NicoUser	instanceVariableNames: 'id nickname premium age sex domain prefecture language roomLabel roomSeetNo member'	classVariableNames: ''	poolDictionaries: ''	category: 'NicoNico'!!NicoUser methodsFor: 'testing' stamp: 'd3 2/25/2013 15:04'!isFemale	^self isMale not! !!NicoUser methodsFor: 'testing' stamp: 'd3 2/25/2013 15:04'!isMale	^self sex == true! !!NicoUser methodsFor: 'testing' stamp: 'd3 2/25/2013 15:02'!isMember	^self member == true! !!NicoUser methodsFor: 'testing' stamp: 'd3 2/25/2013 15:02'!isPremium	^self premium == true! !!NicoUser methodsFor: 'accessing' stamp: 'd3 2/25/2013 14:43'!age	^ age! !!NicoUser methodsFor: 'accessing' stamp: 'd3 2/25/2013 14:47'!age: anInteger	age := anInteger! !!NicoUser methodsFor: 'accessing' stamp: 'd3 2/25/2013 14:46'!domain	^ domain! !!NicoUser methodsFor: 'accessing' stamp: 'd3 2/25/2013 14:48'!domain: aString	domain := aString! !!NicoUser methodsFor: 'accessing' stamp: 'd3 2/25/2013 14:46'!id	^ id! !!NicoUser methodsFor: 'accessing' stamp: 'd3 2/25/2013 14:48'!id: anInteger	id := anInteger! !!NicoUser methodsFor: 'accessing' stamp: 'd3 2/25/2013 14:58'!language	^ language! !!NicoUser methodsFor: 'accessing' stamp: 'd3 2/25/2013 14:59'!language: aString	language := aString! !!NicoUser methodsFor: 'accessing' stamp: 'd3 2/25/2013 14:50'!member	^ member! !!NicoUser methodsFor: 'accessing' stamp: 'd3 2/25/2013 14:50'!member: aBoolean	member := aBoolean! !!NicoUser methodsFor: 'accessing' stamp: 'd3 2/25/2013 14:46'!nickname	^ nickname! !!NicoUser methodsFor: 'accessing' stamp: 'd3 2/25/2013 14:48'!nickname: aString	nickname := aString! !!NicoUser methodsFor: 'accessing' stamp: 'd3 2/25/2013 14:46'!prefecture	^ prefecture! !!NicoUser methodsFor: 'accessing' stamp: 'd3 2/25/2013 14:49'!prefecture: anInteger	prefecture := anInteger! !!NicoUser methodsFor: 'accessing' stamp: 'd3 2/25/2013 14:46'!premium	^ premium! !!NicoUser methodsFor: 'accessing' stamp: 'd3 2/25/2013 14:49'!premium: aBoolean	premium := aBoolean! !!NicoUser methodsFor: 'accessing' stamp: 'd3 2/25/2013 14:46'!roomLabel	^ roomLabel! !!NicoUser methodsFor: 'accessing' stamp: 'd3 2/25/2013 14:49'!roomLabel: aString	roomLabel := aString! !!NicoUser methodsFor: 'accessing' stamp: 'd3 2/25/2013 14:46'!roomSeetNo	^ roomSeetNo! !!NicoUser methodsFor: 'accessing' stamp: 'd3 2/25/2013 14:49'!roomSeetNo: anInteger	roomSeetNo := anInteger! !!NicoUser methodsFor: 'accessing' stamp: 'd3 2/25/2013 14:46'!sex	^ sex! !!NicoUser methodsFor: 'accessing' stamp: 'd3 2/25/2013 14:50'!sex: aBoolean	sex := aBoolean! !Object subclass: #NicoLive	instanceVariableNames: 'id title description defaultCommunity international isOwner ownerId ownerName isReseved watchCount commentCount baseTime openTime startTime endTime isRerunStream bourbonUrl fullVideo afterVideo beforeVideo kickoutVideo twitterTag infinityMode providerType danjoCommentMode archive'	classVariableNames: ''	poolDictionaries: ''	category: 'NicoNico'!!NicoLive methodsFor: 'accessing' stamp: 'd3 2/25/2013 15:10'!afterVideo	^ afterVideo! !!NicoLive methodsFor: 'accessing' stamp: 'd3 2/25/2013 15:10'!afterVideo: anObject	afterVideo := anObject! !!NicoLive methodsFor: 'accessing' stamp: 'd3 2/25/2013 15:41'!archive	^ archive! !!NicoLive methodsFor: 'accessing' stamp: 'd3 2/25/2013 15:41'!archive: anObject	archive := anObject! !!NicoLive methodsFor: 'accessing' stamp: 'd3 2/25/2013 15:10'!baseTime	^ baseTime! !!NicoLive methodsFor: 'accessing' stamp: 'd3 2/25/2013 15:10'!baseTime: anObject	baseTime := anObject! !!NicoLive methodsFor: 'accessing' stamp: 'd3 2/25/2013 15:10'!beforeVideo	^ beforeVideo! !!NicoLive methodsFor: 'accessing' stamp: 'd3 2/25/2013 15:10'!beforeVideo: anObject	beforeVideo := anObject! !!NicoLive methodsFor: 'accessing' stamp: 'd3 2/25/2013 15:10'!bourbonUrl	^ bourbonUrl! !!NicoLive methodsFor: 'accessing' stamp: 'd3 2/25/2013 15:10'!bourbonUrl: anObject	bourbonUrl := anObject! !!NicoLive methodsFor: 'accessing' stamp: 'd3 2/25/2013 15:10'!commentCount	^ commentCount! !!NicoLive methodsFor: 'accessing' stamp: 'd3 2/25/2013 15:10'!commentCount: anObject	commentCount := anObject! !!NicoLive methodsFor: 'accessing' stamp: 'd3 2/25/2013 15:29'!danjoCommentMode	^ danjoCommentMode! !!NicoLive methodsFor: 'accessing' stamp: 'd3 2/25/2013 15:29'!danjoCommentMode: anObject	danjoCommentMode := anObject! !!NicoLive methodsFor: 'accessing' stamp: 'd3 2/25/2013 15:10'!defaultCommunity	^ defaultCommunity! !!NicoLive methodsFor: 'accessing' stamp: 'd3 2/25/2013 15:10'!defaultCommunity: anObject	defaultCommunity := anObject! !!NicoLive methodsFor: 'accessing' stamp: 'd3 2/25/2013 15:10'!description	^ description! !!NicoLive methodsFor: 'accessing' stamp: 'd3 2/25/2013 15:10'!description: anObject	description := anObject! !!NicoLive methodsFor: 'accessing' stamp: 'd3 2/25/2013 15:10'!endTime	^ endTime! !!NicoLive methodsFor: 'accessing' stamp: 'd3 2/25/2013 15:10'!endTime: anObject	endTime := anObject! !!NicoLive methodsFor: 'accessing' stamp: 'd3 2/25/2013 15:10'!fullVideo	^ fullVideo! !!NicoLive methodsFor: 'accessing' stamp: 'd3 2/25/2013 15:10'!fullVideo: anObject	fullVideo := anObject! !!NicoLive methodsFor: 'accessing' stamp: 'd3 2/25/2013 15:10'!id	^ id! !!NicoLive methodsFor: 'accessing' stamp: 'd3 2/25/2013 15:10'!id: anObject	id := anObject! !!NicoLive methodsFor: 'accessing' stamp: 'd3 2/25/2013 15:10'!infinityMode	^ infinityMode! !!NicoLive methodsFor: 'accessing' stamp: 'd3 2/25/2013 15:10'!infinityMode: anObject	infinityMode := anObject! !!NicoLive methodsFor: 'accessing' stamp: 'd3 2/25/2013 15:10'!international	^ international! !!NicoLive methodsFor: 'accessing' stamp: 'd3 2/25/2013 15:10'!international: anObject	international := anObject! !!NicoLive methodsFor: 'accessing' stamp: 'd3 2/25/2013 15:10'!isOwner	^ isOwner! !!NicoLive methodsFor: 'accessing' stamp: 'd3 2/25/2013 15:10'!isOwner: anObject	isOwner := anObject! !!NicoLive methodsFor: 'accessing' stamp: 'd3 2/25/2013 15:10'!isRerunStream	^ isRerunStream! !!NicoLive methodsFor: 'accessing' stamp: 'd3 2/25/2013 15:10'!isRerunStream: anObject	isRerunStream := anObject! !!NicoLive methodsFor: 'accessing' stamp: 'd3 2/25/2013 15:10'!isReseved	^ isReseved! !!NicoLive methodsFor: 'accessing' stamp: 'd3 2/25/2013 15:10'!isReseved: anObject	isReseved := anObject! !!NicoLive methodsFor: 'accessing' stamp: 'd3 2/25/2013 15:10'!kickoutVideo	^ kickoutVideo! !!NicoLive methodsFor: 'accessing' stamp: 'd3 2/25/2013 15:10'!kickoutVideo: anObject	kickoutVideo := anObject! !!NicoLive methodsFor: 'accessing' stamp: 'd3 2/25/2013 15:10'!openTime	^ openTime! !!NicoLive methodsFor: 'accessing' stamp: 'd3 2/25/2013 15:10'!openTime: anObject	openTime := anObject! !!NicoLive methodsFor: 'accessing' stamp: 'd3 2/25/2013 15:10'!ownerId	^ ownerId! !!NicoLive methodsFor: 'accessing' stamp: 'd3 2/25/2013 15:10'!ownerId: anObject	ownerId := anObject! !!NicoLive methodsFor: 'accessing' stamp: 'd3 2/25/2013 15:10'!ownerName	^ ownerName! !!NicoLive methodsFor: 'accessing' stamp: 'd3 2/25/2013 15:10'!ownerName: anObject	ownerName := anObject! !!NicoLive methodsFor: 'accessing' stamp: 'd3 2/25/2013 15:17'!providerType	^ providerType! !!NicoLive methodsFor: 'accessing' stamp: 'd3 2/25/2013 15:17'!providerType: anObject	providerType := anObject! !!NicoLive methodsFor: 'accessing' stamp: 'd3 2/25/2013 15:10'!startTime	^ startTime! !!NicoLive methodsFor: 'accessing' stamp: 'd3 2/25/2013 15:10'!startTime: anObject	startTime := anObject! !!NicoLive methodsFor: 'accessing' stamp: 'd3 2/25/2013 15:10'!title	^ title! !!NicoLive methodsFor: 'accessing' stamp: 'd3 2/25/2013 15:10'!title: anObject	title := anObject! !!NicoLive methodsFor: 'accessing' stamp: 'd3 2/25/2013 15:10'!twitterTag	^ twitterTag! !!NicoLive methodsFor: 'accessing' stamp: 'd3 2/25/2013 15:10'!twitterTag: anObject	twitterTag := anObject! !!NicoLive methodsFor: 'accessing' stamp: 'd3 2/25/2013 15:10'!watchCount	^ watchCount! !!NicoLive methodsFor: 'accessing' stamp: 'd3 2/25/2013 15:10'!watchCount: anObject	watchCount := anObject! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!NicoLive class	instanceVariableNames: ''!!NicoLive class methodsFor: 'as yet unclassified' stamp: 'd3 2/25/2013 15:40'!instVarWithNicoTagTable	^ {(#id: -> #id).	(#title: -> #title).	(#description: -> #description).	(#defaultCommunity: -> #default_community).	(#international: -> #international).	(#isOwner: -> #is_owner).	(#ownerId: -> #owner_id).	(#ownerName: -> #owner_name).	(#isReseved: -> #is_reserved).	(#watchCount: -> #watch_count).	(#commentCount: -> #comment_count).	(#baseTime: -> #base_time).	(#openTime: -> #open_time).	(#startTime: -> #start_time).	(#endTime: -> #end_time).	(#isRerunStream: -> #is_rerun_stream).	(#bourbonUrl: -> #bourbon_url).	(#fullVideo: -> #full_video).	(#afterVideo: -> #after_video).	(#beforeVideo: -> #before_video).	(#kickoutVideo: -> #kickout_video).	(#twitterTag: -> #twitter_tag).	(#danjoCommentMode: -> #danjo_comment_mode).	(#infinityMode: -> #infinity_mode).	(#archive: -> #archive).	(#providerType: -> #provider_type)} asDictionary ! !Object subclass: #NicoCommentServer	instanceVariableNames: 'addr port thread state socketStream comProcess comments seetName'	classVariableNames: ''	poolDictionaries: ''	category: 'NicoNico'!!NicoCommentServer methodsFor: 'accessing' stamp: 'd3 2/25/2013 11:22'!addr	^ addr! !!NicoCommentServer methodsFor: 'accessing' stamp: 'd3 2/25/2013 11:22'!addr: anObject	addr := anObject! !!NicoCommentServer methodsFor: 'accessing' stamp: 'd3 2/25/2013 11:23'!port	^ port! !!NicoCommentServer methodsFor: 'accessing' stamp: 'd3 2/25/2013 11:23'!port: anObject	port := anObject! !!NicoCommentServer methodsFor: 'accessing' stamp: 'd3 2/26/2013 15:39'!seetName	^ seetName! !!NicoCommentServer methodsFor: 'accessing' stamp: 'd3 2/26/2013 15:39'!seetName: anObject	seetName := anObject! !!NicoCommentServer methodsFor: 'accessing' stamp: 'd3 2/25/2013 11:24'!thread	^ thread! !!NicoCommentServer methodsFor: 'accessing' stamp: 'd3 2/25/2013 11:24'!thread: anObject	thread := anObject! !!NicoCommentServer methodsFor: 'initialize-release' stamp: 'd3 2/26/2013 10:52'!initialize 	super initialize.	state := #wait.	comments := OrderedCollection new! !!NicoCommentServer methodsFor: 'testing' stamp: 'd3 2/26/2013 16:23'!close	state := #wait.	comProcess terminate.	comProcess := nil! !!NicoCommentServer methodsFor: 'testing' stamp: 'd3 2/25/2013 20:51'!isActive	^ state == #active! !!NicoCommentServer methodsFor: 'network accessing' stamp: 'd3 2/26/2013 16:19'!connect	comProcess := [ 	| data |	state := #active.	socketStream := SocketStream openConnectionToHost: (NetNameResolver addressForName: addr) port: port.	socketStream nextPutAll: '<thread thread="' , thread printString , '" version="20061206" res_from="-1"/> '.	socketStream nextPut: Character null.	socketStream flush.	socketStream upTo: Character null.	[ 	[ 	[ self isActive ]		whileTrue: [ 			| stream receiveData comment |			receiveData := socketStream upTo: Character null.			receiveData := receiveData convertFromEncoding: #utf8.			comment := NicoComment fromXMLString: receiveData.			comments add: comment.			Transcript				cr;				show: self seetName , ':' ,comment printString ] ]		ensure: [ socketStream close ] ]		on: ConnectionTimedOut		do: [ :ex | 			Transcript				show: ex asString;				cr.			ex retry ] ] newProcess.	comProcess resume! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!NicoCommentServer class	instanceVariableNames: ''!!NicoCommentServer class methodsFor: 'instance creation' stamp: 'd3 2/25/2013 11:25'!addr: address port: portNumber thread: threadNumber	^ self new		addr: address;		port: portNumber;		thread: threadNumber! !Object subclass: #NicoClient	instanceVariableNames: 'user live client commentServer commentServerA commentServerB commentServerC'	classVariableNames: ''	poolDictionaries: ''	category: 'NicoNico'!!NicoClient methodsFor: 'defaults' stamp: 'd3 2/26/2013 17:32'!defaultChromeCookieFile	^ '/Users/YOURNAME/Library/Application Support/Google/Chrome/Default/Cookies'! !!NicoClient methodsFor: 'live watching' stamp: 'd3 2/26/2013 16:20'!connectToCommentServer	commentServer connect.	commentServerA connect.	commentServerB connect.	commentServerC connect! !!NicoClient methodsFor: 'live watching' stamp: 'd3 2/26/2013 16:22'!disconnect	commentServer close.	commentServerA close.	commentServerB close.	commentServerC close! !!NicoClient methodsFor: 'live watching' stamp: 'd3 2/25/2013 15:44'!getXMLDocument: lvNumber	| xmlDocument xmlString |		xmlString := client http		url: (NicoAPIURLs getplayerstatus: lvNumber);		get.	xmlString := xmlString convertFromEncoding: #utf8.	xmlDocument := XMLDOMParser parse: xmlString.	^ xmlDocument findElementNamed: #getplayerstatus! !!NicoClient methodsFor: 'live watching' stamp: 'd3 2/26/2013 16:44'!retrieveCommentServerFrom: getplayerstatusXML user: aNicoUser	| ms addr addrNum port thread portCalc |	ms := getplayerstatusXML findElementNamed: #ms.	addr := (ms findElementNamed: #addr) strings first.	addrNum := (addr at: 6) asString asNumber.	port := (ms findElementNamed: #port) strings first asNumber.	thread := (ms findElementNamed: #thread) strings first asNumber.	portCalc := [ :p :s | (p - 5 + s) \\ 10 + 2805 ].	(user roomLabel beginsWith: 'co')		ifTrue: [ 			commentServer := NicoCommentServer addr: addr port: port thread: thread.			commentServerA := NicoCommentServer addr: addr port: (portCalc value: port value: 1) thread: thread + 1.			commentServerB := NicoCommentServer addr: addr port: (portCalc value: port value: 2) thread: thread + 2.			commentServerC := NicoCommentServer addr: addr port: (portCalc value: port value: 3) thread: thread + 3 ].	user roomLabel = '立ち見A列'		ifTrue: [ 			commentServerA = NicoCommentServer addr: addr port: port thread: thread.			commentServer := NicoCommentServer addr: addr port: (portCalc value: port value: -1) thread: thread - 1.			addrNum := addrNum \\ 4 + 1.			commentServerB := NicoCommentServer addr: addr port: (portCalc value: port value: 1) thread: thread + 1.			commentServerC := NicoCommentServer addr: addr port: (portCalc value: port value: 2) thread: thread + 2 ].	user roomLabel = '立ち見B列'		ifTrue: [ 			commentServerB = NicoCommentServer addr: addr port: port thread: thread.			commentServerC := NicoCommentServer addr: addr port: (portCalc value: port value: 1) thread: thread + 1.			addrNum := (addrNum - 1 - 1) \\ 4 + 1.			commentServer := NicoCommentServer addr: addr port: (portCalc value: port value: -2) thread: thread - 2.			commentServerA := NicoCommentServer addr: addr port: (portCalc value: port value: -1) thread: thread - 1 ].	user roomLabel = '立ち見C列'		ifTrue: [ 			commentServerC = NicoCommentServer addr: addr port: port thread: thread.			commentServerB := NicoCommentServer addr: addr port: (portCalc value: port value: -1) thread: thread - 1.			addrNum := (addrNum - 1 - 1) \\ 4 + 1.			commentServer := NicoCommentServer addr: addr port: (portCalc value: port value: -3) thread: thread - 3.			commentServerA := NicoCommentServer addr: addr port: (portCalc value: port value: -2) thread: thread - 2 ].	commentServer seetName: 'アリーナ'.	commentServerA seetName: '立ち見Ａ'.	commentServerB seetName: '立ち見Ｂ'.	commentServerC seetName: '立ち見Ｃ'!]lang[(2454)0! !!NicoClient methodsFor: 'live watching' stamp: 'd3 2/25/2013 15:38'!retrieveStreamFrom: getplayerstatusXML	| streamXML retrieveBlock instVarWithNicoTagTable |	live := NicoLive new.	instVarWithNicoTagTable := NicoLive instVarWithNicoTagTable .	streamXML := getplayerstatusXML findElementNamed: #stream.	retrieveBlock := [ :tagName | (streamXML findElementNamed: tagName) strings first ].	instVarWithNicoTagTable keysAndValuesDo: [ :instVarName :tagName |		live perform: instVarName with: (retrieveBlock value: tagName)].	! !!NicoClient methodsFor: 'live watching' stamp: 'd3 2/25/2013 15:53'!retrieveUserFrom: getplayerstatusXML	| userXML retrieveBlock|	userXML := getplayerstatusXML findElementNamed: #user.	retrieveBlock := [ :tagName | (userXML findElementNamed: tagName) strings first ].	user := NicoUser new.	user id: (retrieveBlock value: #user_id) asNumber.	user nickname: (retrieveBlock value: #nickname).	user premium: (retrieveBlock value: #is_premium) asNumber == 1.	user domain: (retrieveBlock value: #userDomain).	user age: (retrieveBlock value: #userAge) asNumber.	user sex: (retrieveBlock value: #userSex) asNumber == 1.	user prefecture: (retrieveBlock value: #userPrefecture) asNumber.	user language: (retrieveBlock value: #userLanguage).	user roomLabel: (retrieveBlock value: #room_label).	user roomSeetNo: (retrieveBlock value: #room_seetno) asNumber.	user member: ([:isJoin | isJoin isNil ifTrue:[0] ifFalse: [isJoin asNumber == 1]] value: (retrieveBlock value: #is_join))! !!NicoClient methodsFor: 'live watching' stamp: 'd3 2/26/2013 14:28'!watch: lvNumber	| getplayerstatusXML |	getplayerstatusXML := self getXMLDocument:lvNumber.	self retrieveUserFrom: getplayerstatusXML.	self retrieveCommentServerFrom: getplayerstatusXML user: user.	self retrieveStreamFrom: getplayerstatusXML .! !!NicoClient methodsFor: 'accessing' stamp: 'd3 2/25/2013 08:56'!live	^live ! !!NicoClient methodsFor: 'accessing' stamp: 'd3 2/25/2013 08:56'!live: lvNumber	live := lvNumber! !!NicoClient methodsFor: 'access cookie' stamp: 'd3 2/25/2013 08:48'!getUserData	user isNil ifFalse: [ ^user ].	! !!NicoClient methodsFor: 'access cookie' stamp: 'd3 2/25/2013 09:40'!loginUsingChromeCookie	self login: self useChromeCookie.	self getUserData! !!NicoClient methodsFor: 'access cookie' stamp: 'd3 2/25/2013 09:40'!useChromeCookie	| connection result |	connection := SQLiteConnection fileNamed: self defaultChromeCookieFile.	result := connection executeQuery: self chromeSql.	cookieValue := result first at: 'value'.	^cookieValue! !!NicoClient methodsFor: 'sql' stamp: 'd3 2/24/2013 14:23'!chromeSql	^'select value from cookies where host_key=''.nicovideo.jp'' AND name =''user_session'';'! !!NicoClient methodsFor: 'private' stamp: 'd3 2/25/2013 09:41'!login: cookieValueString	| cookie cookieJar session |	cookie := ZnCookie new.	cookie name: 'user_session'; value: cookieValueString ; domain: '.nicovideo.jp'.	cookieJar := ZnCookieJar new.	cookieJar add: cookie.	session := ZnUserAgentSession withCookieJar: cookieJar.	client := ZnClient new.	client session become: session.! !!NicoClient methodsFor: 'utils' stamp: 'd3 2/25/2013 15:45'!watchURL: anUrl	self watch: (anUrl asUrl path detect: [ :path | path beginsWith: 'lv' ] ifNone: [ nil ])! !!NicoClient methodsFor: 'testing' stamp: 'd3 2/24/2013 14:09'!isMacOS	^Smalltalk environment isMacOS! !!NicoClient methodsFor: 'testing' stamp: 'd3 2/24/2013 14:10'!isMacOSX	^Smalltalk environment isMacOSX! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!NicoClient class	instanceVariableNames: ''!!NicoClient class methodsFor: 'as yet unclassified' stamp: 'd3 2/25/2013 09:37'!loginUsingChromeCookie	^self new loginUsingChromeCookie ! !!NicoClient class methodsFor: 'as yet unclassified' stamp: 'd3 2/24/2013 13:19'!useChromeCookie	^self new useChromeCookie! !Object subclass: #NicoAPIURLs	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'NicoNico'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!NicoAPIURLs class	instanceVariableNames: ''!!NicoAPIURLs class methodsFor: 'as yet unclassified' stamp: 'd3 2/22/2013 14:17'!getalertstatus	^'http://live.nicovideo.jp/api/getalertstatus'! !!NicoAPIURLs class methodsFor: 'as yet unclassified' stamp: 'd3 2/22/2013 15:20'!getplayerstatus: lvNumber	^'http://live.nicovideo.jp/api/getplayerstatus?v=' , lvNumber! !!NicoAPIURLs class methodsFor: 'as yet unclassified' stamp: 'd3 2/22/2013 14:16'!login	^'https://secure.nicovideo.jp/secure/login?site=nicolive_antenna'! !NicoComment initialize!
