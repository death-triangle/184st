Object subclass: #NicoComment	instanceVariableNames: 'anonymity date locale mail no premium thread userId vpos dateUsec comment seetName'	classVariableNames: ''	poolDictionaries: ''	category: 'NicoNico'!!NicoComment methodsFor: 'accessing' stamp: 'DTriangle 2/26/2013 10:21'!anonymity	^ anonymity! !!NicoComment methodsFor: 'accessing' stamp: 'DTriangle 2/26/2013 10:21'!anonymity: anObject	anonymity := anObject! !!NicoComment methodsFor: 'accessing' stamp: 'DTriangle 2/26/2013 10:50'!comment	^ comment! !!NicoComment methodsFor: 'accessing' stamp: 'DTriangle 2/26/2013 10:50'!comment: anObject	comment := anObject! !!NicoComment methodsFor: 'accessing' stamp: 'DTriangle 2/26/2013 10:21'!date	^ date! !!NicoComment methodsFor: 'accessing' stamp: 'DTriangle 2/26/2013 10:21'!date: anObject	date := anObject! !!NicoComment methodsFor: 'accessing' stamp: 'DTriangle 2/26/2013 10:49'!dateUsec	^ dateUsec! !!NicoComment methodsFor: 'accessing' stamp: 'DTriangle 2/26/2013 10:50'!dateUsec: anObject	dateUsec := anObject! !!NicoComment methodsFor: 'accessing' stamp: 'DTriangle 2/26/2013 10:21'!locale	^ locale! !!NicoComment methodsFor: 'accessing' stamp: 'DTriangle 2/26/2013 10:21'!locale: anObject	locale := anObject! !!NicoComment methodsFor: 'accessing' stamp: 'DTriangle 2/26/2013 10:21'!mail	^ mail! !!NicoComment methodsFor: 'accessing' stamp: 'DTriangle 2/26/2013 10:21'!mail: anObject	mail := anObject! !!NicoComment methodsFor: 'accessing' stamp: 'DTriangle 2/26/2013 10:21'!no	^ no! !!NicoComment methodsFor: 'accessing' stamp: 'DTriangle 2/26/2013 10:21'!no: anObject	no := anObject! !!NicoComment methodsFor: 'accessing' stamp: 'DTriangle 2/26/2013 10:21'!premium	^ premium! !!NicoComment methodsFor: 'accessing' stamp: 'DTriangle 2/26/2013 10:21'!premium: anObject	premium := anObject! !!NicoComment methodsFor: 'accessing' stamp: 'd3 2/28/2013 14:23'!seetName	^seetName! !!NicoComment methodsFor: 'accessing' stamp: 'd3 2/28/2013 14:23'!seetName: aString 	seetName := aString! !!NicoComment methodsFor: 'accessing' stamp: 'DTriangle 2/26/2013 10:21'!thread	^ thread! !!NicoComment methodsFor: 'accessing' stamp: 'DTriangle 2/26/2013 10:21'!thread: anObject	thread := anObject! !!NicoComment methodsFor: 'accessing' stamp: 'DTriangle 2/26/2013 10:21'!userId	^ userId! !!NicoComment methodsFor: 'accessing' stamp: 'DTriangle 2/26/2013 10:21'!userId: anObject	userId := anObject! !!NicoComment methodsFor: 'accessing' stamp: 'DTriangle 2/26/2013 10:21'!vpos	^ vpos! !!NicoComment methodsFor: 'accessing' stamp: 'DTriangle 2/26/2013 10:21'!vpos: anObject	vpos := anObject! !!NicoComment methodsFor: 'printing' stamp: 'DTriangle 2/26/2013 16:26'!printOn: aStream	aStream		nextPutAll: self no;		nextPutAll: ' ';		nextPutAll: self comment;		tab; tab; tab; tab;		nextPutAll: self userId;		space;		nextPutAll: self mail! !!NicoComment methodsFor: 'xml support' stamp: 'DTriangle 2/26/2013 10:51'!fromXMLString: xmlString 		|chat xmlDocument convertToSetter|	convertToSetter := [ :getter |		(getter asString , ':' ) asSymbol].	xmlDocument := XMLDOMParser parse: xmlString.	chat := xmlDocument findElementNamed: #chat.	self class table keysAndValuesDo: [ :key :value |		self perform: (convertToSetter value: key) with: (chat attributeAt: value) ].	self comment: chat strings first				! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!NicoComment class	instanceVariableNames: ''!!NicoComment class methodsFor: 'as yet unclassified' stamp: 'DTriangle 2/26/2013 10:23'!attributeNames	^ #(#thread #no #vpos #date #date_usec #mail #user_id #premium #anonymity #locale).! !!NicoComment class methodsFor: 'as yet unclassified' stamp: 'DTriangle 2/26/2013 10:43'!createTable	| table source |	table := self attributeNames collect:[ :attr | | selector |	selector := attr asString.	selector := selector copyReplaceAll: '_' with: ' '.	selector := selector asCamelCase asLegalSelector.	selector asSymbol -> attr. ].	source := WriteStream on: String new.	source nextPutAll: 'table'; cr; tab; nextPutAll: '^'.	source nextPutAll: table asString.	source nextPutAll: ' asDictionary'.	self class compile: source contents  classified: nil.! !!NicoComment class methodsFor: 'as yet unclassified' stamp: 'DTriangle 2/26/2013 10:20'!fromXMLString: xmlString 	^self new fromXMLString: xmlString! !!NicoComment class methodsFor: 'as yet unclassified' stamp: 'DTriangle 2/26/2013 10:39'!initialize 		"self initialize"	self createTable.! !!NicoComment class methodsFor: 'as yet unclassified' stamp: 'DTriangle 3/4/2013 11:24'!table	^{#thread->#thread. #no->#no. #vpos->#vpos. #date->#date. #dateUsec->#date_usec. #mail->#mail. #userId->#user_id. #premium->#premium. #anonymity->#anonymity. #locale->#locale} asDictionary! !Object subclass: #NicoLive	instanceVariableNames: 'id title description defaultCommunity international isOwner ownerId ownerName isReseved watchCount commentCount baseTime openTime startTime endTime isRerunStream bourbonUrl fullVideo afterVideo beforeVideo kickoutVideo twitterTag infinityMode providerType danjoCommentMode archive'	classVariableNames: ''	poolDictionaries: ''	category: 'NicoNico'!!NicoLive methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 15:10'!afterVideo	^ afterVideo! !!NicoLive methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 15:10'!afterVideo: anObject	afterVideo := anObject! !!NicoLive methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 15:41'!archive	^ archive! !!NicoLive methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 15:41'!archive: anObject	archive := anObject! !!NicoLive methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 15:10'!baseTime	^ baseTime! !!NicoLive methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 15:10'!baseTime: anObject	baseTime := anObject! !!NicoLive methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 15:10'!beforeVideo	^ beforeVideo! !!NicoLive methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 15:10'!beforeVideo: anObject	beforeVideo := anObject! !!NicoLive methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 15:10'!bourbonUrl	^ bourbonUrl! !!NicoLive methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 15:10'!bourbonUrl: anObject	bourbonUrl := anObject! !!NicoLive methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 15:10'!commentCount	^ commentCount! !!NicoLive methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 15:10'!commentCount: anObject	commentCount := anObject! !!NicoLive methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 15:29'!danjoCommentMode	^ danjoCommentMode! !!NicoLive methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 15:29'!danjoCommentMode: anObject	danjoCommentMode := anObject! !!NicoLive methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 15:10'!defaultCommunity	^ defaultCommunity! !!NicoLive methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 15:10'!defaultCommunity: anObject	defaultCommunity := anObject! !!NicoLive methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 15:10'!description	^ description! !!NicoLive methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 15:10'!description: anObject	description := anObject! !!NicoLive methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 15:10'!endTime	^ endTime! !!NicoLive methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 15:10'!endTime: anObject	endTime := anObject! !!NicoLive methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 15:10'!fullVideo	^ fullVideo! !!NicoLive methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 15:10'!fullVideo: anObject	fullVideo := anObject! !!NicoLive methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 15:10'!id	^ id! !!NicoLive methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 15:10'!id: anObject	id := anObject! !!NicoLive methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 15:10'!infinityMode	^ infinityMode! !!NicoLive methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 15:10'!infinityMode: anObject	infinityMode := anObject! !!NicoLive methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 15:10'!international	^ international! !!NicoLive methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 15:10'!international: anObject	international := anObject! !!NicoLive methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 15:10'!isOwner	^ isOwner! !!NicoLive methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 15:10'!isOwner: anObject	isOwner := anObject! !!NicoLive methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 15:10'!isRerunStream	^ isRerunStream! !!NicoLive methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 15:10'!isRerunStream: anObject	isRerunStream := anObject! !!NicoLive methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 15:10'!isReseved	^ isReseved! !!NicoLive methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 15:10'!isReseved: anObject	isReseved := anObject! !!NicoLive methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 15:10'!kickoutVideo	^ kickoutVideo! !!NicoLive methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 15:10'!kickoutVideo: anObject	kickoutVideo := anObject! !!NicoLive methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 15:10'!openTime	^ openTime! !!NicoLive methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 15:10'!openTime: anObject	openTime := anObject! !!NicoLive methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 15:10'!ownerId	^ ownerId! !!NicoLive methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 15:10'!ownerId: anObject	ownerId := anObject! !!NicoLive methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 15:10'!ownerName	^ ownerName! !!NicoLive methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 15:10'!ownerName: anObject	ownerName := anObject! !!NicoLive methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 15:17'!providerType	^ providerType! !!NicoLive methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 15:17'!providerType: anObject	providerType := anObject! !!NicoLive methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 15:10'!startTime	^ startTime! !!NicoLive methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 15:10'!startTime: anObject	startTime := anObject! !!NicoLive methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 15:10'!title	^ title! !!NicoLive methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 15:10'!title: anObject	title := anObject! !!NicoLive methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 15:10'!twitterTag	^ twitterTag! !!NicoLive methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 15:10'!twitterTag: anObject	twitterTag := anObject! !!NicoLive methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 15:10'!watchCount	^ watchCount! !!NicoLive methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 15:10'!watchCount: anObject	watchCount := anObject! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!NicoLive class	instanceVariableNames: ''!!NicoLive class methodsFor: 'as yet unclassified' stamp: 'DTriangle 2/25/2013 15:40'!instVarWithNicoTagTable	^ {(#id: -> #id).	(#title: -> #title).	(#description: -> #description).	(#defaultCommunity: -> #default_community).	(#international: -> #international).	(#isOwner: -> #is_owner).	(#ownerId: -> #owner_id).	(#ownerName: -> #owner_name).	(#isReseved: -> #is_reserved).	(#watchCount: -> #watch_count).	(#commentCount: -> #comment_count).	(#baseTime: -> #base_time).	(#openTime: -> #open_time).	(#startTime: -> #start_time).	(#endTime: -> #end_time).	(#isRerunStream: -> #is_rerun_stream).	(#bourbonUrl: -> #bourbon_url).	(#fullVideo: -> #full_video).	(#afterVideo: -> #after_video).	(#beforeVideo: -> #before_video).	(#kickoutVideo: -> #kickout_video).	(#twitterTag: -> #twitter_tag).	(#danjoCommentMode: -> #danjo_comment_mode).	(#infinityMode: -> #infinity_mode).	(#archive: -> #archive).	(#providerType: -> #provider_type)} asDictionary ! !Object subclass: #NicoUser	instanceVariableNames: 'id nickname premium age sex domain prefecture language roomLabel roomSeetNo member'	classVariableNames: ''	poolDictionaries: ''	category: 'NicoNico'!!NicoUser methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 14:43'!age	^ age! !!NicoUser methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 14:47'!age: anInteger	age := anInteger! !!NicoUser methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 14:46'!domain	^ domain! !!NicoUser methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 14:48'!domain: aString	domain := aString! !!NicoUser methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 14:46'!id	^ id! !!NicoUser methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 14:48'!id: anInteger	id := anInteger! !!NicoUser methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 14:58'!language	^ language! !!NicoUser methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 14:59'!language: aString	language := aString! !!NicoUser methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 14:50'!member	^ member! !!NicoUser methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 14:50'!member: aBoolean	member := aBoolean! !!NicoUser methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 14:46'!nickname	^ nickname! !!NicoUser methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 14:48'!nickname: aString	nickname := aString! !!NicoUser methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 14:46'!prefecture	^ prefecture! !!NicoUser methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 14:49'!prefecture: anInteger	prefecture := anInteger! !!NicoUser methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 14:46'!premium	^ premium! !!NicoUser methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 14:49'!premium: aBoolean	premium := aBoolean! !!NicoUser methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 14:46'!roomLabel	^ roomLabel! !!NicoUser methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 14:49'!roomLabel: aString	roomLabel := aString! !!NicoUser methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 14:46'!roomSeetNo	^ roomSeetNo! !!NicoUser methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 14:49'!roomSeetNo: anInteger	roomSeetNo := anInteger! !!NicoUser methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 14:46'!sex	^ sex! !!NicoUser methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 14:50'!sex: aBoolean	sex := aBoolean! !!NicoUser methodsFor: 'testing' stamp: 'DTriangle 2/25/2013 15:04'!isFemale	^self isMale not! !!NicoUser methodsFor: 'testing' stamp: 'DTriangle 2/25/2013 15:04'!isMale	^self sex == true! !!NicoUser methodsFor: 'testing' stamp: 'DTriangle 2/25/2013 15:02'!isMember	^self member == true! !!NicoUser methodsFor: 'testing' stamp: 'DTriangle 2/25/2013 15:02'!isPremium	^self premium == true! !Object subclass: #NicoClient	instanceVariableNames: 'user live client commentServer commentServerA commentServerB commentServerC'	classVariableNames: ''	poolDictionaries: ''	category: 'NicoNico'!!NicoClient methodsFor: 'access cookie' stamp: 'DTriangle 3/6/2013 16:35'!loginUsingChromeCookie	self login: self useChromeCookie.! !!NicoClient methodsFor: 'access cookie' stamp: 'DTriangle 2/25/2013 09:40'!useChromeCookie	| connection result |	connection := SQLiteConnection fileNamed: self defaultChromeCookieFile.	result := connection executeQuery: self chromeSql.	cookieValue := result first at: 'value'.	^cookieValue! !!NicoClient methodsFor: 'accessing' stamp: 'd3 2/28/2013 14:31'!comments	| comments |	comments := commentServer comments do: [ :comment | comment seetName: commentServer seetName ].	comments := comments , (commentServerA comments do: [ :comment | comment seetName: commentServerA seetName ]).	comments := comments , (commentServerB comments do: [ :comment | comment seetName: commentServerB seetName ]).	comments := comments , (commentServerC comments do: [ :comment | comment seetName: commentServerC seetName ]).	comments := (comments asSortedCollection: [ :a :b | a date > b date ]) asArray .	^{ comments collect: [ :c | c seetName ]. comments collect:[:c | c comment]. comments collect: [ :c | c userId ] }! !!NicoClient methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 08:56'!live	^live ! !!NicoClient methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 08:56'!live: lvNumber	live := lvNumber! !!NicoClient methodsFor: 'accessing' stamp: 'DTriangle 3/6/2013 16:42'!user	^user! !!NicoClient methodsFor: 'defaults' stamp: 'd3 2/26/2013 22:18'!defaultChromeCookieFile	^ '/Users/d3/Library/Application Support/Google/Chrome/Default/Cookies'! !!NicoClient methodsFor: 'live watching' stamp: 'DTriangle 2/26/2013 16:20'!connectToCommentServer	commentServer connect.	commentServerA connect.	commentServerB connect.	commentServerC connect! !!NicoClient methodsFor: 'live watching' stamp: 'DTriangle 2/26/2013 16:22'!disconnect	commentServer close.	commentServerA close.	commentServerB close.	commentServerC close! !!NicoClient methodsFor: 'live watching' stamp: 'DTriangle 2/25/2013 15:44'!getXMLDocument: lvNumber	| xmlDocument xmlString |		xmlString := client http		url: (NicoAPIURLs getplayerstatus: lvNumber);		get.	xmlString := xmlString convertFromEncoding: #utf8.	xmlDocument := XMLDOMParser parse: xmlString.	^ xmlDocument findElementNamed: #getplayerstatus! !!NicoClient methodsFor: 'live watching' stamp: 'DTriangle 3/17/2013 21:50'!retrieveCommentServerFrom: getplayerstatusXML user: aNicoUser	| ms addr addrNum port portA portB portC addrNumA addrNumB addrNumC thread portCalc |	ms := getplayerstatusXML findElementNamed: #ms.	addr := (ms findElementNamed: #addr) strings first.	addrNum := (addr at: 6) asString asNumber.	port := (ms findElementNamed: #port) strings first asNumber.	thread := (ms findElementNamed: #thread) strings first asNumber.	addrNum := (addr at: 6) asString asNumber.	portCalc := [ :p :s | (p - 5 + s) \\ 10 + 2805 ].	(user roomLabel beginsWith: 'co')		ifTrue: [ 			portA := portCalc value: port value: 1.			portB := portCalc value: port value: 2.			portC := portCalc value: port value: 3.			addrNumA := addrNumB := addrNumC := addrNum.			portB > portC				ifTrue: [ addrNumC := addrNum  \\ 4 + 1 ].			portA > portB				ifTrue: [ addrNumB := addrNumC := addrNum \\ 4 + 1 ].			port > portA				ifTrue: [ addrNumA := addrNumB := addrNumC := addrNum \\ 4 + 1 ] ].	user roomLabel = '立ち見A列'		ifTrue: [ 			portA := port.			port := portCalc value: portA value: -1.			portB := portCalc value: port value: 2.			portC := portCalc value: port value: 3.			addrNumA := addrNumB := addrNumC := addrNum.			portB > portC				ifTrue: [ addrNumC := addrNum \\ 4 + 1 ].			portA > portB				ifTrue: [ addrNumB := addrNumC := addrNum  \\ 4 +  1 ].			port > portA				ifTrue: [ addrNum := addrNum  - 1 + 3 \\ 4 + 1] ].			thread := thread - 1.	user roomLabel = '立ち見B列'		ifTrue: [ 			portB := port.			port := portCalc value: portB value: -2.			portA := portCalc value: port value: 1.			portC := portCalc value: port value: 3.			addrNumA := addrNumB := addrNumC := addrNum.			portB > portC				ifTrue: [ addrNumC := addrNum \\ 4 + 1 ].			portA > portB				ifTrue: [ addrNum := addrNumA := addrNum -1 + 3 \\ 4 + 1 ].			port > portA				ifTrue: [ addrNum := addrNum - 1 + 3 \\ 4 + 1 ].				thread := thread -1 . ].	user roomLabel = '立ち見C列'		ifTrue: [ 			portC := port.			port := portCalc value: portC value: -3.			portA := portCalc value: port value: 1.			portB := portCalc value: port value: 2.			addrNumA := addrNumB := addrNumC := addrNum.			portB > portC				ifTrue: [ addrNum := addrNumA := addrNumB := addrNum - 1 + 3\\ 4 + 1 ].			portA > portB				ifTrue: [ addrNum := addrNumA := addrNum - 1 + 3 \\ 4 + 1 ].			port > portA				ifTrue: [ addrNum := addrNum - 1 + 3 \\ 4 + 1 ].				thread := thread -1 . ].	commentServer := NicoCommentServer addr: 'msg10' , addrNum asString , '.live.nicovideo.jp'  port: port thread: thread.	commentServerA := NicoCommentServer		addr: 'msg10' , addrNumA asString , '.live.nicovideo.jp'		port: portA		thread: thread + 1.	commentServerB := NicoCommentServer		addr: 'msg10' , addrNumB asString , '.live.nicovideo.jp'		port: portB		thread: thread + 2.	commentServerC := NicoCommentServer		addr: 'msg10' , addrNumC asString , '.live.nicovideo.jp'		port: portC		thread: thread + 3.	commentServer seetName: 'アリーナ'.	commentServerA seetName: '立ち見Ａ'.	commentServerB seetName: '立ち見Ｂ'.	commentServerC seetName: '立ち見Ｃ' !]lang[(3076)0! !!NicoClient methodsFor: 'live watching' stamp: 'DTriangle 2/25/2013 15:38'!retrieveStreamFrom: getplayerstatusXML	| streamXML retrieveBlock instVarWithNicoTagTable |	live := NicoLive new.	instVarWithNicoTagTable := NicoLive instVarWithNicoTagTable .	streamXML := getplayerstatusXML findElementNamed: #stream.	retrieveBlock := [ :tagName | (streamXML findElementNamed: tagName) strings first ].	instVarWithNicoTagTable keysAndValuesDo: [ :instVarName :tagName |		live perform: instVarName with: (retrieveBlock value: tagName)].	! !!NicoClient methodsFor: 'live watching' stamp: 'DTriangle 2/25/2013 15:53'!retrieveUserFrom: getplayerstatusXML	| userXML retrieveBlock|	userXML := getplayerstatusXML findElementNamed: #user.	retrieveBlock := [ :tagName | (userXML findElementNamed: tagName) strings first ].	user := NicoUser new.	user id: (retrieveBlock value: #user_id) asNumber.	user nickname: (retrieveBlock value: #nickname).	user premium: (retrieveBlock value: #is_premium) asNumber == 1.	user domain: (retrieveBlock value: #userDomain).	user age: (retrieveBlock value: #userAge) asNumber.	user sex: (retrieveBlock value: #userSex) asNumber == 1.	user prefecture: (retrieveBlock value: #userPrefecture) asNumber.	user language: (retrieveBlock value: #userLanguage).	user roomLabel: (retrieveBlock value: #room_label).	user roomSeetNo: (retrieveBlock value: #room_seetno) asNumber.	user member: ([:isJoin | isJoin isNil ifTrue:[0] ifFalse: [isJoin asNumber == 1]] value: (retrieveBlock value: #is_join))! !!NicoClient methodsFor: 'live watching' stamp: 'DTriangle 2/26/2013 14:28'!watch: lvNumber	| getplayerstatusXML |	getplayerstatusXML := self getXMLDocument:lvNumber.	self retrieveUserFrom: getplayerstatusXML.	self retrieveCommentServerFrom: getplayerstatusXML user: user.	self retrieveStreamFrom: getplayerstatusXML .! !!NicoClient methodsFor: 'sql' stamp: 'DTriangle 2/24/2013 14:23'!chromeSql	^'select value from cookies where host_key=''.nicovideo.jp'' AND name =''user_session'';'! !!NicoClient methodsFor: 'testing' stamp: 'DTriangle 2/24/2013 14:09'!isMacOS	^Smalltalk environment isMacOS! !!NicoClient methodsFor: 'testing' stamp: 'DTriangle 2/24/2013 14:10'!isMacOSX	^Smalltalk environment isMacOSX! !!NicoClient methodsFor: 'utils' stamp: 'DTriangle 2/25/2013 15:45'!watchURL: anUrl	self watch: (anUrl asUrl path detect: [ :path | path beginsWith: 'lv' ] ifNone: [ nil ])! !!NicoClient methodsFor: 'private' stamp: 'DTriangle 2/25/2013 09:41'!login: cookieValueString	| cookie cookieJar session |	cookie := ZnCookie new.	cookie name: 'user_session'; value: cookieValueString ; domain: '.nicovideo.jp'.	cookieJar := ZnCookieJar new.	cookieJar add: cookie.	session := ZnUserAgentSession withCookieJar: cookieJar.	client := ZnClient new.	client session become: session.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!NicoClient class	instanceVariableNames: ''!!NicoClient class methodsFor: 'as yet unclassified' stamp: 'DTriangle 2/25/2013 09:37'!loginUsingChromeCookie	^self new loginUsingChromeCookie ! !!NicoClient class methodsFor: 'as yet unclassified' stamp: 'DTriangle 2/24/2013 13:19'!useChromeCookie	^self new useChromeCookie! !Object subclass: #NicoAPIURLs	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'NicoNico'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!NicoAPIURLs class	instanceVariableNames: 'testMode'!!NicoAPIURLs class methodsFor: 'as yet unclassified' stamp: 'DTriangle 2/22/2013 14:17'!getalertstatus	^'http://live.nicovideo.jp/api/getalertstatus'! !!NicoAPIURLs class methodsFor: 'as yet unclassified' stamp: 'DTriangle 3/4/2013 21:35'!getplayerstatus: lvNumber	self isTestMode		ifTrue: [ ^ 'http://localhost:8888/nicoXML' ].	^ 'http://live.nicovideo.jp/api/getplayerstatus?v=' , lvNumber! !!NicoAPIURLs class methodsFor: 'as yet unclassified' stamp: 'DTriangle 2/22/2013 14:16'!login	^'https://secure.nicovideo.jp/secure/login?site=nicolive_antenna'! !!NicoAPIURLs class methodsFor: 'class initialization' stamp: 'DTriangle 3/4/2013 13:52'!initialize	"self initialize"	testMode := false.! !!NicoAPIURLs class methodsFor: 'samples' stamp: 'DTriangle 3/4/2013 13:53'!sampleXML	^'<?xml version="1.0" encoding="utf-8"?><getplayerstatus status="ok" time="1362370809">    <stream>        <id>lv128761367</id>        <title>( ´◉‿ゝ◉`)</title>        <description>何度でも復活するさ</description>        <provider_type>community</provider_type>        <default_community>co1949309</default_community>        <international>13</international>        <is_owner>0</is_owner>        <owner_id>32306412</owner_id>        <owner_name>名無しさんニコニコ</owner_name>        <is_reserved>0</is_reserved>        <watch_count>884</watch_count>        <comment_count>711</comment_count>        <base_time>1362369149</base_time>        <open_time>1362369149</open_time>        <start_time>1362369189</start_time>        <end_time>1362370989</end_time>        <is_rerun_stream>0</is_rerun_stream>        <bourbon_url>http://live.nicovideo.jp/gate/lv128761367?sec=nicolive_crowded&amp;sub=watch_crowded_0_community_lv128761367_onair</bourbon_url>        <full_video>http://live.nicovideo.jp/gate/lv128761367?sec=nicolive_crowded&amp;sub=watch_crowded_0_community_lv128761367_onair</full_video>        <after_video></after_video>        <before_video></before_video>        <kickout_video>http://live.nicovideo.jp/gate/lv128761367?sec=nicolive_oidashi&amp;sub=watchplayer_oidashialert_0_community_lv128761367_onair</kickout_video>        <twitter_tag>#co1949309</twitter_tag>        <danjo_comment_mode>0</danjo_comment_mode>        <infinity_mode>0</infinity_mode>        <archive>0</archive>        <press>            <display_lines>-1</display_lines>            <display_time>-1</display_time>            <style_conf></style_conf>        </press>        <plugin_delay></plugin_delay>        <plugin_url></plugin_url>        <plugin_urls/>        <allow_netduetto>1</allow_netduetto>        <nd_token>74b278fbb4d093b24f9f44f45f841b998a0087f8</nd_token>        <ng_scoring>0</ng_scoring>        <header_comment>0</header_comment>        <footer_comment>0</footer_comment>        <split_bottom>0</split_bottom>        <split_top>0</split_top>        <background_comment>0</background_comment>        <font_scale></font_scale>        <comment_lock>0</comment_lock>        <telop>            <enable>0</enable>        </telop>        <contents_list>            <contents id="main" disableAudio="0" disableVideo="0" start_time="1362369150">                rtmp:rtmp://nlpoca39.live.nicovideo.jp:1935/publicorigin/130304_12_0/,lv128761367?1362370809:30:a81f2354dccfe5d1            </contents>        </contents_list>        <is_priority_prefecture></is_priority_prefecture>    </stream>    <user>        <user_id>465270</user_id>        <nickname>４じ</nickname>        <is_premium>1</is_premium>        <userAge>5</userAge>        <userSex>1</userSex>        <userDomain>jp</userDomain>        <userPrefecture>12</userPrefecture>        <userLanguage>ja-jp</userLanguage>        <room_label>co1949309</room_label>        <room_seetno>390</room_seetno>        <is_join>1</is_join>        <twitter_info>            <status>disabled</status>            <screen_name></screen_name>            <followers_count>0</followers_count>            <is_vip>0</is_vip>            <profile_image_url>http://a3.twimg.com/sticky/default_profile_images/default_profile_3_normal.png            </profile_image_url>            <after_auth>0</after_auth>            <tweet_token>1506859b9857047b578ce2446957ac8f3dba10e7</tweet_token>        </twitter_info>    </user>    <rtmp is_fms="1" rtmpt_port="80">        <url>rtmp://nleaf03.live.nicovideo.jp:1935/liveedge/live_130304_13_0</url>        <ticket>465270:lv128761367:0:1362370809:6e71ef930f5294b9</ticket>    </rtmp>    <ms>        <addr>msg101.live.nicovideo.jp</addr>        <port>2812</port>        <thread>1249393643</thread>    </ms>    <tid_list/>    <twitter>        <live_enabled>1</live_enabled>        <vip_mode_count>10000</vip_mode_count>        <live_api_url>http://watch.live.nicovideo.jp/api/</live_api_url>    </twitter>    <player>        <error_report>1</error_report>    </player>    <marquee>        <category>一般(その他)</category>        <game_key>370a55a3</game_key>        <game_time>1362370809</game_time>        <force_nicowari_off>0</force_nicowari_off>    </marquee></getplayerstatus>        '!]lang[(4345)0! !!NicoAPIURLs class methodsFor: 'private' stamp: 'DTriangle 3/4/2013 13:08'!beNormalMode	testMode := false! !!NicoAPIURLs class methodsFor: 'private' stamp: 'DTriangle 3/4/2013 13:08'!beTestMode	testMode := true! !!NicoAPIURLs class methodsFor: 'private' stamp: 'DTriangle 3/4/2013 13:08'!isTestMode	^testMode = true! !Object subclass: #NicoCommentServer	instanceVariableNames: 'addr port thread state socketStream comProcess comments seetName'	classVariableNames: ''	poolDictionaries: ''	category: 'NicoNico'!!NicoCommentServer methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 11:22'!addr	^ addr! !!NicoCommentServer methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 11:22'!addr: anObject	addr := anObject! !!NicoCommentServer methodsFor: 'accessing' stamp: 'd3 2/28/2013 14:13'!comments	^comments copy! !!NicoCommentServer methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 11:23'!port	^ port! !!NicoCommentServer methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 11:23'!port: anObject	port := anObject! !!NicoCommentServer methodsFor: 'accessing' stamp: 'DTriangle 2/26/2013 15:39'!seetName	^ seetName! !!NicoCommentServer methodsFor: 'accessing' stamp: 'DTriangle 2/26/2013 15:39'!seetName: anObject	seetName := anObject! !!NicoCommentServer methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 11:24'!thread	^ thread! !!NicoCommentServer methodsFor: 'accessing' stamp: 'DTriangle 2/25/2013 11:24'!thread: anObject	thread := anObject! !!NicoCommentServer methodsFor: 'initialize-release' stamp: 'DTriangle 2/26/2013 10:52'!initialize 	super initialize.	state := #wait.	comments := OrderedCollection new! !!NicoCommentServer methodsFor: 'network accessing' stamp: 'd3 2/27/2013 16:35'!connect	comProcess := [ 	[ 	[ 	| data |	state := #active.	socketStream := SocketStream openConnectionToHost: (NetNameResolver addressForName: addr) port: port.	socketStream nextPutAll: '<thread thread="' , thread printString , '" version="20061206" res_from="-1"/> '.	socketStream nextPut: Character null.	socketStream flush.	socketStream upTo: Character null.	[ self isActive ]		whileTrue: [ 			| stream receiveData comment |			receiveData := socketStream upTo: Character null.			receiveData := receiveData convertFromEncoding: #utf8.			comment := NicoComment fromXMLString: receiveData.			comments add: comment.			Transcript				cr;				show: self seetName , ':' , comment printString ] ]		ensure: [ self close ] ]		on: ConnectionTimedOut , ConnectionClosed , ConnectionRefused		do: [ :ex | 			Transcript				show: self seetName , ':' , ex asString, ' [retry now]';				cr.			"(Delay forSeconds: 60) wait."			ex retry ] ] newProcess.	comProcess resume! !!NicoCommentServer methodsFor: 'testing' stamp: 'DTriangle 2/26/2013 16:23'!close	state := #wait.	comProcess terminate.	comProcess := nil! !!NicoCommentServer methodsFor: 'testing' stamp: 'DTriangle 2/25/2013 20:51'!isActive	^ state == #active! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!NicoCommentServer class	instanceVariableNames: ''!!NicoCommentServer class methodsFor: 'instance creation' stamp: 'DTriangle 2/25/2013 11:25'!addr: address port: portNumber thread: threadNumber	^ self new		addr: address;		port: portNumber;		thread: threadNumber! !NicoComment initialize!NicoAPIURLs initialize!